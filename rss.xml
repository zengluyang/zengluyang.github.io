<?xml version="1.0"?>
<rss version="2.0">  <channel>
    <title>AmicusLuyang</title>
    <link>http://zengluyang.github.io</link>
    <pubDate>21 Oct 13 19:17 +0800</pubDate>
    <item>
      <title>Eclipse Cygwin CDT 搭建C/C++开发环境</title>
      <link>http://zengluyang.github.io/2013/eclipse-cygwin-cdt-c-cpp-dev-env</link>
      <pubDate>2013-10-18 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://staratsky.iteye.com/blog/1541645&#34;&gt;via&lt;/a&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Cygwin 是一个用于 Windows 的类 UNIX shell 环境。 它由两个组件组成：一个 UNIX API 库，它模拟 UNIX 操作系统提供的许多特性；以及 Bash shell 的改写版本和许多 UNIX 实用程序，它们提供大家熟悉的 UNIX 命令行界面。前一个组件是一个 Windows 动态链接库 (DLL)。后一个组件是一组基于 Cygwin DLL 的程序，其中许多是用未经修改的 UNIX 源代码编译的。它们合在一起提供大家熟悉的 UNIX 环境。&lt;br /&gt;&#xD;&#xA;Eclipse CDT 是 Eclipse 插件，它将把 Eclipse 转换为功能强大的 C/C++ IDE.&lt;br /&gt;&#xD;&#xA;利用CDT和cygwin,eclipse可以在windows环境下开发c、c++程序&lt;br /&gt;&#xD;&#xA;需要注意的是:CDT版本和Eclipse版本必须对应，否则加载插件不成功&#xD;&#xA;&lt;h2&gt;1.下载Eclipse&lt;/h2&gt;&#xD;&#xA;首先在eclipse官网上下载GalEclipse IDE for C/C++ Developers (includes Incubating components)版本,&lt;br /&gt;&#xD;&#xA;地址是http://www.eclipse.org/downloads/&#xD;&#xA;&lt;h2&gt;2、下载并安装Cygwin&lt;/h2&gt;&#xD;&#xA;Cygwin的官方网站下载Cygwin的安装程序，Cygwin的官方网址是：http://www.cygwin.com/。安装文件名称setup.exe.&lt;br /&gt;&#xD;&#xA;下载完成后，运行setup.exe程序，出现安装画面。直接点“下一步”，出现安装模式的对话框&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;1）选择安装模式&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;Cygwin有三种安装模式：&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;•Install from Internet，这种模式直接从Internet安装；&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;•Download Without Installing，这种模式只从网上下载Cygwin的组件包，但不安装；&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;•Install from Local Directory，这种模式与上面第二种模式对应，当你的Cygwin组件包已经下载到本地，则可以使用此模式从本地安装Cygwin。&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;一般选择第一种安装模式。&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;选择完成后，点击下一步。&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;2）选择cygwin安装根目录&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;这一步选择Cygwin的安装目录，以及一些参数的设置。程序默认的安装位置是C:\cygwin\，如没有特殊要求，选择默认方式，点击“下一步”&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;3)指定下载存放目录&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;这一步我们可以选择安装过程中从网上下载的Cygwin组件包的保存位置，选择完以后，点击“下一步”，&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;4）选择你的连接方式&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;一般选择“direct connection”,然后点击下一步&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;选择下载站点,为了获得最快的下载速度，我们首先在列表中寻找Cygwin中国镜像的地址&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;5）选择需要下载安装的组件包，&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;为了使我们安装的Cygwin能够编译程序，我们需要安装gcc编译器，默认情况下，gcc并不会被安装，我们需要选中它来安装。为了安装gcc，“Devel”选项设为install&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;-Devel，是一组开发工具，包括连接器，汇编器和其他用于目标文件和档案的工具（gcc、make、gdb）。&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;以下进入安装过程。安装完成后，启动cygwin环境，在cyg环境下输入：gcc –version&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;如果安装成功，则正常打印版本信息&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;h2&gt;3、安装cdt插件&lt;/h2&gt;&#xD;&#xA;打开eclipse,打开help--&amp;gt;install new software菜单项，在location项中输入：http://download.eclipse.org/tools/cdt/releases/indigo。&lt;br /&gt;&#xD;&#xA;一般情况下，把所有的安装选项都选上。&lt;br /&gt;&#xD;&#xA;安装完之后，重启eclipse。&lt;br /&gt;&#xD;&#xA;如能在Eclipse的Preferences上看到C/C++的配置，则说明插件安装成功&#xD;&#xA;&lt;h2&gt;4、用eclipse运行一个hello world&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;1)新建一个c/c++项目&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;2)为本项目设定编译值支持&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;C/C++ General -&amp;gt; Paths and Symbols&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Includes TAB页增加本项目头文件路径&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Library Paths 指定自定义库路径&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Source Location 指定源码目录&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;C/C++ Build -&amp;gt; Tool Chain Editor&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Current toolchains: Cygwin GCC&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Current builder: Gnu Make Builder&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;C/C++ Build-&amp;gt;Setting-&amp;gt;Binary Parsers&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;选中Cygwin PE Parser&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;如果在新建项目的时候没有设置toolchain&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;在项目上右键打开属性&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;properties-&amp;gt;C/C++ Build-&amp;gt;Tool Chain Editor 按上面修改&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;3）debug常见错误&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;错误1：Can&#39;t find a source file at &#34;xxxxx“Locate the file or edit the source lookup path to include its location&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;简单的说就是windows目录与unix文档目录间映射出了问题。由于GDB使用的unix格式的路径，而eclipse使用的是windows路径，导致找不到匹配的代码，需要手工设置：&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;在windows-&amp;gt;preference-&amp;gt;c/c++-&amp;gt;debug-&amp;gt;source lookup path中，添加一条目录映射，将/cygdrive/c映射为c:\，这样gdb将可正确找到存放于e盘相应目录下的源文件。映射有优先次序，将此条置于最上一条，即可正常调试。&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;/ul&gt;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;错误2：launch failed no binaries错误，&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;原因：window-&amp;gt;proferences的设置对 project不起作用，需要在 project-&amp;gt; properties 中对 c/c++ make project 的 binary parse 进行设置到 win 下。&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;project--&amp;gt;properties--&amp;gt;C/C++ Build--&amp;gt;Settings---&amp;gt;Binary Parsers&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;将PE Windows parser 打上勾&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/li&gt;&lt;/ul&gt;&#xD;&#xA;&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>404 页面，其实我们可以做的更多</title>
      <link>http://zengluyang.github.io/2013/404-page-we-can-make-a-difference</link>
      <pubDate>2013-10-18 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;404 页面，除了显示冷冰冰的 404 Not Found 之外，其实我们可以做得更多。QQ空间就把 404页面和失踪的孩子联系到了一起，现在访问到QQ空间的一个任意不存在的页面（404页面），比如：&lt;a href=&#34;http://qzone.qq.com/404&#34; target=&#34;_blank&#34;&gt;http://qzone.qq.com/404&lt;/a&gt;，都能看到一个失踪孩子的信息：&#xA;&lt;img alt=&#34;404&#34; src=&#34;http://lux.ssh01.com/blog/wp-content/uploads/2013/10/4041.png&#34; /&gt;&#xA;&#xA;将 404 页面和失踪的孩子联系在一起最早是国外一个网站 &lt;a href=&#34;http://notfound.org/&#34; target=&#34;_blank&#34;&gt;notfound.org&lt;/a&gt; 提出的想法，号召大家把 404 页面贡献出来，帮助丢失孩子的父母，现在 QQ空间推了国内版本之后，我相信肯定可以帮助更多丢失孩子的父母，所以我也第一时间在自己的博客上用上。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;对于 WP 博客来说，实现这个功能非常简单，只需要将当前主题的的 404.php中添加:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php echo( &#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;http://www.qq.com/404/search_children.js&amp;quot; charset=&amp;quot;utf-8&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&#39; ); ?&amp;gt;&#xA;#you can also put &amp;lt;script&amp;gt;..&amp;lt;/script&amp;gt; directly, without wrapping it in &amp;lt;?php&amp;gt; ... ?&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;对于我所用的这个模版，最终代码类似这样：&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?php&#xA;/**&#xA;* The template for displaying 404 pages (Not Found).&#xA;*&#xA;* @package WordPress&#xA;* @subpackage Twenty_Twelve&#xA;* @since Twenty Twelve 1.0&#xA;*/&#xA;&#xA;get_header(); ?&amp;gt;&#xA;&#xA;&amp;lt;div id=&amp;quot;primary&amp;quot; class=&amp;quot;site-content&amp;quot;&amp;gt;&#xA;&amp;lt;div id=&amp;quot;content&amp;quot; role=&amp;quot;main&amp;quot;&amp;gt;&#xA;&#xA;&amp;lt;article id=&amp;quot;post-0&amp;quot; class=&amp;quot;post error404 no-results not-found&amp;quot;&amp;gt;&#xA;&amp;lt;header class=&amp;quot;entry-header&amp;quot;&amp;gt;&#xA;&amp;lt;h1 class=&amp;quot;entry-title&amp;quot;&amp;gt;&amp;lt;?php _e( &#39;This is somewhat embarrassing, isn&amp;amp;rsquo;t it?&#39;, &#39;twentytwelve&#39; ); ?&amp;gt;&amp;lt;/h1&amp;gt;&#xA;&amp;lt;/header&amp;gt;&#xA;&#xA;&amp;lt;div class=&amp;quot;entry-content&amp;quot;&amp;gt;&#xA;&amp;lt;p&amp;gt;&amp;lt;?php _e( &#39;It seems we can&amp;amp;rsquo;t find what you&amp;amp;rsquo;re looking for. Perhaps searching can help.&#39;, &#39;twentytwelve&#39; ); ?&amp;gt;&amp;lt;/p&amp;gt;&#xA;&amp;lt;?php echo( &#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;http://www.qq.com/404/search_children.js&amp;quot; charset=&amp;quot;utf-8&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&#39; ); ?&amp;gt;&#xA;&amp;lt;?php get_search_form(); ?&amp;gt;&#xA;&amp;lt;/div&amp;gt;&amp;lt;!-- .entry-content --&amp;gt;&#xA;&amp;lt;/article&amp;gt;&amp;lt;!-- #post-0 --&amp;gt;&#xA;&#xA;&amp;lt;/div&amp;gt;&amp;lt;!-- #content --&amp;gt;&#xA;&amp;lt;/div&amp;gt;&amp;lt;!-- #primary --&amp;gt;&#xA;&#xA;&amp;lt;?php get_footer(); ?&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Use Memcache on Wordpress</title>
      <link>http://zengluyang.github.io/2013/use-memcache-on-wordpress</link>
      <pubDate>2013-10-07 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://wordpress.org/plugins/memcached/installation/&#34;&gt;wordpress plugins memcached &lt;/a&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;&amp;nbsp;&#xD;&#xA;&lt;ol&gt;&#xD;&#xA;&#x9;&lt;li&gt;Install &lt;a href=&#34;http://danga.com/memcached&#34; rel=&#34;nofollow&#34;&gt;memcached&lt;/a&gt; on at least one server. Note the connection info. The default is &lt;code&gt;127.0.0.1:11211&lt;/code&gt;.&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Install the &lt;a href=&#34;http://pecl.php.net/package/memcache&#34; rel=&#34;nofollow&#34;&gt;PECL memcache extension&lt;/a&gt;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Copy object-cache.php to wp-content&lt;/li&gt;&#xD;&#xA;&lt;/ol&gt;&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>Install PP2P VPN Server on Ubuntu</title>
      <link>http://zengluyang.github.io/2013/install-pp2p-vpn-server-on-ubuntu</link>
      <pubDate>2013-10-07 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;接着用下面的命令更新你的软件包数据库&#xD;&#xA;&lt;pre&gt;apt-get update&lt;/pre&gt;&#xD;&#xA;现在我们可以正式安装VPN Server了。这里我们选择PPTP(VPN 协议的一种),因为简单，一条命令搞定。剩下的无非是一些配置。&#xD;&#xA;&lt;pre&gt;apt-get install PPTPd&lt;/pre&gt;&#xD;&#xA;PPTPd安装完成后，编辑/etc/PPTPd.conf文件，去掉下面两行的注释或者直接添加这两行(在文件的最后).这一步是配置ip地址的范围。&#xD;&#xA;&lt;pre&gt;localip 192.168.7.1 remoteip 192.168.0.2-254&lt;/pre&gt;&#xD;&#xA;然后在/etc/ppp/chap-secrets文件中添加VPN用户，按照下面的格式,每个用户一行。&#xD;&#xA;&lt;pre&gt;username PPTPd password *&lt;/pre&gt;&#xD;&#xA;为了让你的用户连上VPN后能够正常地解析域名，我们需要手动设置DNS. 编辑/etc/ppp/options，找到ms-dns这一项，设置你的DNS.这里我推荐的是Google 最近发布的&lt;a href=&#34;http://code.google.com/speed/public-dns/&#34; target=&#34;_blank&#34;&gt;Public DNS&lt;/a&gt;,原因是因为好记。&#xD;&#xA;&lt;pre&gt;ms-dns 8.8.8.8 ms-dns 8.8.4.4&lt;/pre&gt;&#xD;&#xA;编辑/etc/sysctl.conf文件，找到”net.ipv4.ip_forward=1″这一行，去掉前面的注释。&#xD;&#xA;&lt;pre&gt;net.ipv4.ip_forward=1&lt;/pre&gt;&#xD;&#xA;运行下面的命令让配置生效。&#xD;&#xA;&lt;pre&gt;sysctl -p&lt;/pre&gt;&#xD;&#xA;重启PPTPd服务&#xD;&#xA;&lt;pre&gt;/etc/init.d/PPTPd restart&lt;/pre&gt;&#xD;&#xA;最后开启iptables转发&#xD;&#xA;&lt;pre&gt;/sbin/iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE&lt;/pre&gt;&#xD;&#xA;将上面的命令加到/etc/rc.local exit 0 前面，开机自动添加NAT转发路由。&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;OK,安装完毕。&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>How To Install and Use Memcache on Ubuntu 12.0</title>
      <link>http://zengluyang.github.io/2013/how-to-install-and-use-memcache-on-ubuntu-12-0</link>
      <pubDate>2013-10-07 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/community/articles/how-to-install-and-use-memcache-on-ubuntu-12-04&#34;&gt;via&lt;/a&gt;&#xD;&#xA;&lt;h3&gt;About Memcache&lt;/h3&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;&lt;hr /&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Memcache is a system that works to speed up virtual private servers by caching server information. The program allows you to allocate a specific amount of the server ram toward caching recently queried data for a certain amount of time. Once the data is requested again, memcache speeds up the process of retrieving it by displaying the cached information instead of generating the result from the database.&#xD;&#xA;&lt;h2&gt;Setup&lt;/h2&gt;&#xD;&#xA;The steps in this tutorial require the user to have root privileges. You can see how to set that up in the &lt;a href=&#34;https://www.digitalocean.com/community/articles/how-to-add-and-delete-users-on-ubuntu-12-04-and-centos-6&#34;&gt;Basic Users Tutorial&lt;/a&gt;.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Before starting off, it’s a good idea to update apt-get to make sure that all of the packages we download to the VPS are up to date.&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;sudo apt-get update&lt;/pre&gt;&#xD;&#xA;Additionally, you should have MySQL and PHP installed on the virtual server.&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;sudo apt-get install mysql-server php5-mysql php5 php5-memcache&lt;/pre&gt;&#xD;&#xA;&amp;nbsp;&#xD;&#xA;&lt;h2&gt;Install Memcache&lt;/h2&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;&lt;hr /&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Installing memcache takes several steps.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;To start, install memcached via apt-get.&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;sudo apt-get install memcached&lt;/pre&gt;&#xD;&#xA;The next step is to install php-pear, the repository that stores memcache.&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;sudo apt-get install php-pear&lt;/pre&gt;&#xD;&#xA;If you do not have a compiler on your server, you can download build-essential in order to install memcache:&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;sudo apt-get install build-essential&lt;/pre&gt;&#xD;&#xA;Finally use PECL (PHP Extension Community Library) to install memcache:&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;sudo pecl install memcache&lt;/pre&gt;&#xD;&#xA;Say yes by pressing enter during the installation when you are asked if you would like to “Enable memcache session handler support? [yes] :”&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Once you have completed the installation of memcache with PECL on the VPS, add memcached to memcache.ini:&#xD;&#xA;&lt;pre&gt;echo &#34;extension=memcache.so&#34; | sudo tee /etc/php5/conf.d/memcache.ini&lt;/pre&gt;&#xD;&#xA;Now you are ready to start using Memcache.&#xD;&#xA;&lt;h2&gt;Confirm Memcache and See Stats&lt;/h2&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;&lt;hr /&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;After Memcache is downloaded, you can check that it has been installed by searching for it:&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;ps aux | grep memcache&lt;/pre&gt;&#xD;&#xA;Additionally, you can see the memcache stats by typing:&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt; echo &#34;stats settings&#34; | nc localhost 11211&lt;/pre&gt;&#xD;&#xA;&amp;nbsp;&#xD;&#xA;&lt;h2&gt;Step Three—How Memcache Works&lt;/h2&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;&lt;hr /&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Memcache works by redirecting code to first attempt to retrieve data from the cache before querying the server’s database. The cache populates by saving recently retrieved server data for a certain amount of time. By caching recently requested information, future queries do not have to go through the longer process of retrieving the information from a database and can, instead, access it through the cache.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;The memcache page shows this abbreviated code on its homepage to summarize the memcache process:&#xD;&#xA;&lt;pre lang=&#34;php&#34; escaped=&#34;true&#34;&gt;function get_foo(foo_id)&#xD;&#xA;    foo = memcached_get(&#34;foo:&#34; . foo_id)&#xD;&#xA;    return foo if defined foo&lt;/pre&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;    foo = fetch_foo_from_database(foo_id)&lt;br /&gt;&#xD;&#xA;    memcached_set(&#34;foo:&#34; . foo_id, foo)&lt;br /&gt;&#xD;&#xA;    return foo&lt;br /&gt;&#xD;&#xA;end&#xD;&#xA;&lt;h2&gt;A Simple Memcache Example&lt;/h2&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;&lt;hr /&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;This section will set up a simple php script to use memcache for retrieving a single value originally found in a mysql table.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;The following steps set up a mysql user who can access the appropriate database, create a table to query, and insert the one value that we will test in the new mysql table.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Log into mysql: &lt;code&gt;mysql -u root -p&lt;/code&gt; and execute the following commands:&#xD;&#xA;&lt;pre lang=&#34;sql&#34;&gt;use test;&lt;/pre&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;grant all on test.* to test@localhost identified by &#39;testing123&#39;;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;create table example (id int, name varchar(30));&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;insert into example values (1, &#34;new_data&#34;);&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;exit;&#xD;&#xA;Once you have exited MySQL, create the memcache script file:&#xD;&#xA;&lt;pre lang=&#34;bash&#34;&gt;nano memtest.php&lt;/pre&gt;&#xD;&#xA;We are now going to build up the php script step by step (the entire script will be at the end of the section):&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;Start off by creating a new persistent connection with memcache, which runs on memcache’s default port, 11211.&#xD;&#xA;&lt;pre lang=&#34;php&#34; escaped=&#34;true&#34;&gt;&amp;lt;?php&#xD;&#xA;$meminstance = new Memcache();&#xD;&#xA;$meminstance-&amp;gt;pconnect(&#39;localhost&#39;, 11211);&lt;/pre&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&amp;nbsp;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;The next step is to connect to the new mysql database with the user that we created earlier:&#xD;&#xA;&lt;pre lang=&#34;php&#34; escaped=&#34;true&#34;&gt;mysql_connect(&#34;localhost&#34;, &#34;test&#34;, &#34;testing123&#34;) or die(mysql_error());&#xD;&#xA;mysql_select_db(&#34;test&#34;) or die(mysql_error());&lt;/pre&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&amp;nbsp;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;After that, go ahead and create the query that we will pose to the server, as well as provide a key to identify that specific action:&#xD;&#xA;&lt;pre lang=&#34;php&#34; escaped=&#34;true&#34;&gt;$query = &#34;select id from example where name = &#39;new_data&#39;&#34;;&#xD;&#xA;$querykey = &#34;KEY&#34; . md5($query);&lt;/pre&gt;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&amp;nbsp;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&#x9;&lt;li&gt;The script first searches the cache for the answer to the query. If the result does not exist, the script reroutes the question to the original database. Once the query has been answered by the original database, the script stores the result in memcache, using the “set” command-- which both saves it and allows the user to designate the number of seconds that it should remain in the cache (600 would save it in the cache for 10 minutes).When we run the script for the first time, it will inform us that the data was collected from the mysql database. However, as it does so, it stores the information in the cache, so that a second run of the script retrieves it from the cache and lets the user know.In 10 minutes the cache is emptied once more and running the script will make it access the database once again.&#xD;&#xA;&lt;pre lang=&#34;php&#34; escaped=&#34;true&#34;&gt;$result = $meminstance-&amp;gt;get($querykey);&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;if (!$result) {&lt;br /&gt;&#xD;&#xA;       $result = mysql_fetch_array(mysql_query(&#34;select id from example where name = &#39;new_data&#39;&#34;)) or die(&#39;mysql error&#39;);&lt;br /&gt;&#xD;&#xA;       $meminstance-&amp;gt;set($querykey, $result, 0, 600);&lt;br /&gt;&#xD;&#xA;print &#34;got result from mysql\n&#34;;&lt;br /&gt;&#xD;&#xA;return 0;&lt;br /&gt;&#xD;&#xA;}&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;print &#34;got result from memcached\n&#34;;&lt;br /&gt;&#xD;&#xA;return 0;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;?&amp;gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Altogether the script looks like this:&#xD;&#xA;&lt;pre lang=&#34;php&#34; escaped=&#34;true&#34;&gt;&amp;lt;?php&#xD;&#xA;$meminstance = new Memcache();&#xD;&#xA;$meminstance-&amp;gt;pconnect(&#39;localhost&#39;, 11211);&lt;/pre&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;mysql_connect(&#34;localhost&#34;, &#34;test&#34;, &#34;testing123&#34;) or die(mysql_error());&lt;br /&gt;&#xD;&#xA;mysql_select_db(&#34;test&#34;) or die(mysql_error());&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;$query = &#34;select id from example where name = &#39;new_data&#39;&#34;;&lt;br /&gt;&#xD;&#xA;$querykey = &#34;KEY&#34; . md5($query);&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;$result = $meminstance-&amp;gt;get($querykey);&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;if (!$result) {&lt;br /&gt;&#xD;&#xA;       $result = mysql_fetch_array(mysql_query(&#34;select id from example where name = &#39;new_data&#39;&#34;)) or die(&#39;mysql error&#39;);&lt;br /&gt;&#xD;&#xA;       $meminstance-&amp;gt;set($querykey, $result, 0, 600);&lt;br /&gt;&#xD;&#xA;print &#34;got result from mysql\n&#34;;&lt;br /&gt;&#xD;&#xA;return 0;&lt;br /&gt;&#xD;&#xA;}&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;print &#34;got result from memcached\n&#34;;&lt;br /&gt;&#xD;&#xA;return 0;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;?&amp;gt;&#xD;&#xA;Running the script on the command line produces the following results:&#xD;&#xA;&lt;pre lang=&#34;shell&#34;&gt;# php memtest.php &#xD;&#xA;got result from mysql&lt;/pre&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;# php memtest.php &lt;br /&gt;&#xD;&#xA;got result from memcached&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;# php memtest.php &lt;br /&gt;&#xD;&#xA;got result from memcached&#xD;&#xA;&amp;nbsp;&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>Install Dropbox On Ubuntu Server (10 &amp; 11)</title>
      <link>http://zengluyang.github.io/2013/install-dropbox-on-ubuntu-server-10-11</link>
      <pubDate>2013-10-06 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;a href=&#34;http://ubuntuservergui.com/ubuntu-server-guide/install-dropbox-ubuntu-server&#34;&gt;via&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This post will help you install the Linux Dropbox client on your headless Ubuntu Server and link it up to your Dropbox account. Unlike the process of &lt;a href=&#34;http://ubuntuservergui.com/ubuntu-server-guide/mount-s3-ubuntu-server&#34;&gt;mounting an S3 bucket&lt;/a&gt; we looked at before the Dropbox approach is a much better solution for sharing files. If you’re a daily Dropbox user you’ll quickly get hooked on the convenience of having your servers in the same file sharing loop as all your other Dropbox connected devices!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&#xA;&lt;h4&gt;Installing Dropbox&lt;/h4&gt;&#xA;Start off by downloading the Linux version of Dropbox onto your server. These steps have been tested on Ubuntu Server 10.10 and 11.04.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Download the &lt;em&gt;32Bit Version&lt;/em&gt;&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;wget -O dropbox.tar.gz &#34;http://www.dropbox.com/download/?plat=lnx.x86&#34;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Download the &lt;em&gt;64Bit Version&lt;/em&gt;&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;wget -O dropbox.tar.gz &#34;http://www.dropbox.com/download/?plat=lnx.x86_64&#34;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you unsure which version you need you can quickly check by running &lt;em&gt;uname -a&lt;/em&gt;.&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;sudo uname -a&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If the uname output has an &lt;em&gt;i686&lt;/em&gt; at the end you need the 32Bit version and if it has&lt;em&gt;x86_64&lt;/em&gt; you want the 64Bit version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you extract the Dropbox archive it will automatically place its files in the home directory of the the user you’re logged in as under: &lt;em&gt;~/.dropbox&lt;/em&gt;. You can always move these files later but its something to keep in mind.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Extract the Dropbox archive&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;tar -xzvf dropbox.tar.gz&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&#xA;&lt;h4&gt;Linking Your Server to Your Dropbox Account&lt;/h4&gt;&#xA;Before you take the next step you’ll want to make sure your LANG &lt;a href=&#34;https://help.ubuntu.com/community/EnvironmentVariables&#34; target=&#34;_blank&#34;&gt;environment variable&lt;/a&gt; is set to a value other than NULL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Check the value of your &lt;em&gt;LANG&lt;/em&gt; environment variable&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;printenv LANG     // outputs en_US.UTF-8 on my machine&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To connect the Dropbox client on your server to your Dropbox account you’ll need to copy the link it outputs into a browser window and then login to your Dropbox account.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Run dropboxd on your server&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;~/.dropbox-dist/dropboxd&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It will start outputting a link similar to this one every few seconds&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;This client is not linked to any account...&#xA;Please visit https://www.dropbox.com/cli_link?host_id=1c1497d78b543178b9349a7c1a8b087a&amp;amp;cl=en_US to link this machine.&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The trick to a smooth link is to make sure you &lt;strong&gt;leave dropboxd running while you follow the link&lt;/strong&gt;. You don’t need to access the link from the server you’re trying to install Dropbox on. You can copy and paste that link into a browser running on a separate machine and Dropbox will authorize the client running on your server.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once it succeeds you’ll see the message &lt;em&gt;Client successfully linked, Welcome!&lt;/em&gt; on your server and it will stop printing the authorization link.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hit ctrl c to terminate the process&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;Client successfully linked, Welcome!&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once the Dropbox client on your server is successfully linked it will automatically create a Dropbox folder under ~/Dropbox for the user you’re logged in as. All your folders will be visible under the Dropbox folder but since the Dropbox service isn’t actually running on your server yet you you won’t be able to see the files inside these folders until the client is running and has a check to synchronize.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can manually start the service by running&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;~/.dropbox-dist/dropbox&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, a better option for controlling the Dropbox client is to setup an Ubuntu service management script for it.&#xA;&lt;h4&gt;Start Dropbox Automatically On Boot&lt;/h4&gt;&#xA;Dropbox provides a handy little service management script that makes it easy to start, stop and check the status of the Dropbox client.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Create a new file for the service management script&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;sudo vi /etc/init.d/dropbox&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Paste the following script into the new file&#xA;&lt;pre lang=&#34;bash&#34;&gt;&lt;code&gt;&#xA;#!/bin/sh&#xA;# dropbox service&#xA;# Replace with linux users you want to run Dropbox clients for&#xA;DROPBOX_USERS=&#34;user1 user2&#34;&#xA; &#xA;DAEMON=.dropbox-dist/dropbox&#xA; &#xA;start() {&#xA;    echo &#34;Starting dropbox...&#34;&#xA;    for dbuser in $DROPBOX_USERS; do&#xA;        HOMEDIR=`getent passwd $dbuser | cut -d: -f6`&#xA;        if [ -x $HOMEDIR/$DAEMON ]; then&#xA;            HOME=&#34;$HOMEDIR&#34; start-stop-daemon -b -o -c $dbuser -S -u $dbuser -x $HOMEDIR/$DAEMON&#xA;        fi&#xA;    done&#xA;}&#xA; &#xA;stop() {&#xA;    echo &#34;Stopping dropbox...&#34;&#xA;    for dbuser in $DROPBOX_USERS; do&#xA;        HOMEDIR=`getent passwd $dbuser | cut -d: -f6`&#xA;        if [ -x $HOMEDIR/$DAEMON ]; then&#xA;            start-stop-daemon -o -c $dbuser -K -u $dbuser -x $HOMEDIR/$DAEMON&#xA;        fi&#xA;    done&#xA;}&#xA; &#xA;status() {&#xA;    for dbuser in $DROPBOX_USERS; do&#xA;        dbpid=`pgrep -u $dbuser dropbox`&#xA;        if [ -z $dbpid ] ; then&#xA;            echo &#34;dropboxd for USER $dbuser: not running.&#34;&#xA;        else&#xA;            echo &#34;dropboxd for USER $dbuser: running (pid $dbpid)&#34;&#xA;        fi&#xA;    done&#xA;}&#xA; &#xA;case &#34;$1&#34; in&#xA; &#xA;    start)&#xA;        start&#xA;        ;;&#xA; &#xA;    stop)&#xA;        stop&#xA;        ;;&#xA; &#xA;    restart|reload|force-reload)&#xA;        stop&#xA;        start&#xA;        ;;&#xA; &#xA;    status)&#xA;        status&#xA;        ;;&#xA; &#xA;    *)&#xA;        echo &#34;Usage: /etc/init.d/dropbox {start|stop|reload|force-reload|restart|status}&#34;&#xA;        exit 1&#xA; &#xA;esac&#xA;exit 0&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Control the Dropbox client like any other Ubuntu service&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;sudo service dropbox start|stop|reload|force-reload|restart|status&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img title=&#34;Dropbox Delorean By Dropbox Artwork Team&#34; alt=&#34;Dropbox Delorean By Dropbox Artwork Team&#34; src=&#34;http://ubuntuservergui.com/wp-content/uploads/2011/05/dropbox-delorean.png&#34; width=&#34;528&#34; height=&#34;296&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Depending upon the number of files you have on Dropbox and the speed of your internet connection it may take some time for the Dropbox client to synchronize everything.&#xA;&lt;h4&gt;Check Status with Dropbox CLI&lt;/h4&gt;&#xA;Dropbox has a command line python script available separately to provide more functionality and details on the status of the Dropbox client.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Download the dropbox.py script and adjust the file permissions&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;wget -O ~/.dropbox/dropbox.py &#34;http://www.dropbox.com/download?dl=packages/dropbox.py&#34;&#xA;chmod 755 ~/.dropbox/dropbox.py&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can download the script anywhere you like, I’ve included it along with the rest of the Dropbox files.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Now you can easily check the status of the Dropbox client&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;~/.dropbox/dropbox.py status&#xA;Downloading 125 files (303.9 KB/sec, 1 hr left)&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Get a full list of CLI commands&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;~/.dropbox/dropbox.py help&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note: use dropbox help &amp;lt;command&amp;gt; to view usage for a specific command.&lt;/p&gt;&#xA;&#xA;&lt;p&gt; status       get current status of the dropboxd&lt;br /&gt;&#xA; help         provide help&lt;br /&gt;&#xA; puburl       get public url of a file in your dropbox&lt;br /&gt;&#xA; stop         stop dropboxd&lt;br /&gt;&#xA; running      return whether dropbox is running&lt;br /&gt;&#xA; start        start dropboxd&lt;br /&gt;&#xA; filestatus   get current sync status of one or more files&lt;br /&gt;&#xA; ls           list directory contents with current sync status&lt;br /&gt;&#xA; autostart    automatically start dropbox at login&lt;br /&gt;&#xA; exclude      ignores/excludes a directory from syncing&#xA;&#xA;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Use the &lt;em&gt;exclude&lt;/em&gt; command to keep specific files or folders from syncing to your server&#xA;&lt;div&gt;&#xA;&lt;div&gt;&#xA;&lt;pre&gt;~/.dropbox/dropbox.py help exclude&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;dropbox exclude [list]&lt;br /&gt;&#xA;dropbox exclude add [DIRECTORY] [DIRECTORY] ...&lt;br /&gt;&#xA;dropbox exclude remove [DIRECTORY] [DIRECTORY] ...&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&#34;list&#34; prints a list of directories currently excluded from syncing.  &lt;br /&gt;&#xA;&#34;add&#34; adds one or more directories to the exclusion list, then resynchronizes Dropbox. &lt;br /&gt;&#xA;&#34;remove&#34; removes one or more directories from the exclusion list, then resynchronizes Dropbox.&lt;br /&gt;&#xA;With no arguments, executes &#34;list&#34;. &lt;br /&gt;&#xA;Any specified path must be within Dropbox.&#xA;&#xA;&#xA;&amp;nbsp;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once the Dropbox service is running and fully syncrhonized you can access all your Dropbox files and easily share files on your server with all your other Dropbox connected gadgets!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For more resources and troubleshooting tips visit the &lt;a href=&#34;http://forums.dropbox.com/&#34; target=&#34;_blank&#34;&gt;Dropbox forums&lt;/a&gt;. Happy syncing!&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>enable mod rewrite in apache2</title>
      <link>http://zengluyang.github.io/2013/enable-mod-rewrite-in-apache2</link>
      <pubDate>2013-09-22 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;In order to use mod_rewrite you can type the following command in the terminal:&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;[plain]a2enmod rewrite&lt;br /&gt;&#xD;&#xA;[/plain]&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Restart apache2 after&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;[plain]/etc/init.d/apache2 restart&lt;br /&gt;&#xD;&#xA;[/plain]&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;or&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;[plain]service apache2 restart&lt;br /&gt;&#xD;&#xA;[/plain]&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Then, if you&#39;d like, you can use the following .htaccess file.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;pre&gt;&amp;lt;IfModule mod_rewrite.c&amp;gt;&#xD;&#xA;    RewriteEngine On&#xD;&#xA;    RewriteBase /&#xD;&#xA;    RewriteCond %{REQUEST_FILENAME} !-f&#xD;&#xA;    RewriteCond %{REQUEST_FILENAME} !-d&#xD;&#xA;    RewriteRule . /index.php [L]&#xD;&#xA;&amp;lt;/IfModule&amp;gt;&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;The above .htaccess file (if placed in your DocumentRoot) will redirect all traffic to an index.php file in the DocumentRoot unless the file exists.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;So, let&#39;s say you have the following directory structure and httpdocs is the DocumentRoot&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;pre&gt;httpdocs/&#xD;&#xA;    .htaccess&#xD;&#xA;    index.php&#xD;&#xA;    images/&#xD;&#xA;        hello.png&#xD;&#xA;    js/&#xD;&#xA;        jquery.js&#xD;&#xA;    css/&#xD;&#xA;        style.css&#xD;&#xA;includes/&#xD;&#xA;    app/&#xD;&#xA;        app.php&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;Any file that exists in httpdocs will be served to the requester using the .htaccess shown above, however, everything else will be redirected to httpdocs/index.php. Your application files in includes/app will not be accessible.&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>php 显示cgminer当前部分状态</title>
      <link>http://zengluyang.github.io/2013/php-display-cgminer-status</link>
      <pubDate>2013-09-21 12:00:00 +0800</pubDate>
      <description>&lt;pre&gt;&lt;code&gt;&amp;lt;?php&#xA;#&#xA;# Sample Socket I/O to CGMiner API&#xA;#&#xA;date_default_timezone_set(&#39;Asia/Chongqing&#39;);&#xA;function getsock($addr, $port)&#xA;{&#xA; $socket = null;&#xA; $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);&#xA; if ($socket === false || $socket === null)&#xA; {&#xA;    $error = socket_strerror(socket_last_error());&#xA;    $msg = &amp;quot;socket create(TCP) failed&amp;quot;;&#xA;    echo &amp;quot;ERR: $msg &#39;$error&#39;\n&amp;quot;;&#xA;    return null;&#xA; }&#xA;&#xA; $res = socket_connect($socket, $addr, $port);&#xA; if ($res === false)&#xA; {&#xA;    $error = socket_strerror(socket_last_error());&#xA;    $msg = &amp;quot;socket connect($addr,$port) failed&amp;quot;;&#xA;    echo &amp;quot;ERR: $msg &#39;$error&#39;\n&amp;quot;;&#xA;    socket_close($socket);&#xA;    return null;&#xA; }&#xA; return $socket;&#xA;}&#xA;#&#xA;# Slow ...&#xA;function readsockline($socket)&#xA;{&#xA; $line = &#39;&#39;;&#xA; while (true)&#xA; {&#xA;    $byte = socket_read($socket, 1);&#xA;    if ($byte === false || $byte === &#39;&#39;)&#xA;        break;&#xA;    if ($byte === &amp;quot;&amp;amp;#92;&amp;amp;#48;&amp;quot;)&#xA;        break;&#xA;    $line .= $byte;&#xA; }&#xA; return $line;&#xA;}&#xA;#&#xA;function request($cmd)&#xA;{&#xA; $socket = getsock(&#39;127.0.0.1&#39;, 4028);&#xA; if ($socket != null)&#xA; {&#xA;    socket_write($socket, $cmd, strlen($cmd));&#xA;    $line = readsockline($socket);&#xA;    socket_close($socket);&#xA;&#xA;    if (strlen($line) == 0)&#xA;    {&#xA;        echo &amp;quot;WARN: &#39;$cmd&#39; returned nothing\n&amp;quot;;&#xA;        return $line;&#xA;    }&#xA;&#xA;    #print &amp;quot;$cmd returned &#39;$line&#39;\n&amp;quot;;&#xA;&#xA;    if (substr($line,0,1) == &#39;{&#39;)&#xA;        return json_decode($line, true);&#xA;}&#xA;&#xA; return null;&#xA;}&#xA;#&#xA; $r = request(&amp;quot;{\&amp;quot;command\&amp;quot;:\&amp;quot;summary\&amp;quot;,\&amp;quot;parameter\&amp;quot;:\&amp;quot;\&amp;quot;}&amp;quot;);&#xA; $status = $r[&#39;STATUS&#39;][0];&#xA; $when = $status[&#39;When&#39;];&#xA;&#xA; $description = $status[&#39;Description&#39;];&#xA; $summary = $r[&#39;SUMMARY&#39;][0];&#xA; $speed = $summary[&#39;MHS av&#39;];&#xA; $elspsed = $summary[&#39;Elapsed&#39;];&#xA; $found_blocks = $summary[&#39;Found Blocks&#39;];&#xA; $accepted = $summary[&#39;Accepted&#39;];&#xA; $rejected = $summary[&#39;Rejected&#39;];&#xA; $hardware_err = $summary[&#39;Hardware Errors&#39;];&#xA; $utility = $summary[&#39;Utility&#39;];&#xA; $discarded = $summary[&#39;Discarded&#39;];&#xA; $stale = $summary[&#39;Stale&#39;];&#xA; $net_block = $summary[&#39;Network Blocks&#39;];&#xA; $total_mh = $summary[&#39;Total MH&#39;];&#xA; $work_ulti = $summary[&#39;Work Utility&#39;];&#xA; $best_share = $summary[&#39;Best Share&#39;];&#xA; $energy = $elspsed*0.5*$utility/1000/3600;&#xA;&#xA;?&amp;gt;&#xA;&#xA;&amp;lt;html&amp;gt;&#xA;&amp;lt;head&amp;gt;&#xA;    &amp;lt;link rel=&amp;quot;icon&amp;quot; href=&amp;quot;./favicon.ico&amp;quot; type=&amp;quot;image/x-icon&amp;quot; /&amp;gt;&#xA;    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;/&amp;gt;&#xA;    &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;        table,td,th&#xA;        {&#xA;            border:1px solid black;&#xA;        }&#xA;        h1 {font-family:verdana,arial,sans; font-size:15pt; color:blue;}&#xA;        td { text-align:center;font-family:verdana,arial,sans; font-size:13pt; color:blue; background:#ecffff;}&#xA;        td.two { font-family:verdana,arial,sans; font-size:13pt; color:blue; background:#ecffff; }&#xA;        td.h { font-family:verdana,arial,sans; font-size:13pt; color:blue; background:#c4ffff; }&#xA;        td.err { font-family:verdana,arial,sans; font-size:13pt; color:black; background:#ff3050; }&#xA;        td.warn { font-family:verdana,arial,sans; font-size:13pt; color:black; background:#ffb050; }&#xA;        td.sta { font-family:verdana,arial,sans; font-size:13pt; color:green; }&#xA;        td.tot { font-family:verdana,arial,sans; font-size:13pt; color:blue; background:#fff8f2; }&#xA;        td.lst { font-family:verdana,arial,sans; font-size:13pt; color:blue; background:#ffffdd; }&#xA;        td.hi { font-family:verdana,arial,sans; font-size:13pt; color:blue; background:#f6ffff; }&#xA;        td.lo { font-family:verdana,arial,sans; font-size:13pt; color:blue; background:#deffff; }&#xA;&#xA;    &amp;lt;/style&amp;gt;&#xA;    &amp;lt;title&amp;gt;ZLY&#39;s miner&#39;s status - &amp;lt;?php echo $description;?&amp;gt; &amp;lt;/title&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;        // var url = &amp;quot;https://www.btcguild.com/api.php?api_key=50bd432d484ac778128f2cc98621d0f3&amp;quot;;&#xA;        // var xmlHttp = null;&#xA;&#xA;        // xmlHttp = new XMLHttpRequest();&#xA;        // xmlHttp.open( &amp;quot;GET&amp;quot;, url, false );&#xA;        // xmlHttp.send( null );&#xA;        // xmlHttp.setRequestHeader(&amp;quot;access-control-allow-origin&amp;quot;,&amp;quot;*&amp;quot;);&#xA;        // xmlHttp.setOrigin(&amp;quot;https://www.btcguild.com/&amp;quot;);&#xA;        // var resp = xmlHttp.responseText;&#xA;        // var unpaidBTC = JSON.parse(resp).user.unpaid_rewards;&#xA;        // document.getElementById(&amp;quot;unpaid_rewards&amp;quot;).value = unpaidBTC;&#xA;        // alert(unpaidBTC);&#xA;&#xA;    &amp;lt;/script&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&#xA;&amp;lt;body&amp;gt;&#xA;&amp;lt;center&amp;gt;&#xA;&amp;lt;h1&amp;gt; Miner Status:&amp;lt;/h1&amp;gt;&#xA;&amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Average Speed&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $speed;?&amp;gt; MH/s&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Running Time&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo round(floatval($elspsed)/60/60/24,2);?&amp;gt; Days&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Hardware Errors&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $hardware_err;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Energy Cost&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo round($energy,2);?&amp;gt; kWh&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;When&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo date(&#39;m-d G:i:s&#39;,$when);?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Found Blocks&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $found_blocks;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Accepted&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $accepted;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Rejected&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $rejected;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Utility&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $utility;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Discarded&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $discarded;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Stale&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $stale;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Network Blocks&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $net_block;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Total TH&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo round(floatval($total_mh)/1000/1000,3);?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;tr&amp;gt;&#xA;    &amp;lt;td&amp;gt;Best Share&amp;lt;/td&amp;gt;&#xA;    &amp;lt;td&amp;gt;&amp;lt;?php echo $best_share;?&amp;gt;&amp;lt;/td&amp;gt;&#xA;&amp;lt;/tr&amp;gt;&#xA;&#xA;&amp;lt;/table&amp;gt;&#xA;&amp;lt;/center&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>U盘安装 Ubuntu Server 12.04.3 LTS</title>
      <link>http://zengluyang.github.io/2013/install-unbuntu-server-via-usb-stick</link>
      <pubDate>2013-09-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;ol&gt;&#xD;&#xA;&#x9;&lt;li&gt;格式化U盘，确保U盘是FAT32格式&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;使用&lt;a href=&#34;http://sourceforge.net/projects/unetbootin/&#34;&gt;Unetbootin&lt;/a&gt;将iso文件写入U盘&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;将安装iso拷贝如U盘根目录&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;重启电脑，设置BIOS为USB-HDD启动&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;按照流程安装，会提示找不到CD-ROM&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;ALT+F2 to another console and&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Mount the usb-stick to /mnt/usb&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;[plain]&lt;br /&gt;&#xD;&#xA;mkdir /mnt/usb&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;tail -n 100 /var/log/syslog&lt;br /&gt;&#xD;&#xA;#determine which one is your usb device&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;mount -t vfat /dev/your_usb_device/mnt/usb&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;mount -t iso9660 -o loop /mnt/usb/ubuntu-12.04.3-server-i386 /cdrom&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;#Mount the server-image file to /cdrom&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&lt;p&gt;[/plain]&#xD;&#xA;&#x9;&lt;li&gt;exit from the terminal and ALT+F1 back to main installer screen&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;Press ESC to avoid trying to mount cd-rom&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;In main installer menu chose &#34;Detect and mount CD-rom&#34;&lt;/li&gt;&#xD;&#xA;&#x9;&lt;li&gt;按照正常流程安装&lt;/li&gt;&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>世界，你好！</title>
      <link>http://zengluyang.github.io/2013/hello-world</link>
      <pubDate>2013-09-20 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;欢迎使用WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>世界，你好！</title>
      <link>http://zengluyang.github.io/2013/hello-world-2</link>
      <pubDate>2013-09-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;欢迎使用WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>arp.h</title>
      <link>http://zengluyang.github.io/2013/arp-h</link>
      <pubDate>2013-09-12 12:00:00 +0800</pubDate>
      <description>&lt;p&gt;&lt;pre lang=&#34;cpp&#34;&gt;&#xD;&#xA;/*-*- Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */&#xD;&#xA;/*&#xD;&#xA;* Copyright (c) 1997 Regents of the University of California.&#xD;&#xA;* All rights reserved.&#xD;&#xA;*&#xD;&#xA;* Redistribution and use in source and binary forms, with or without&#xD;&#xA;* modification, are permitted provided that the following conditions&#xD;&#xA;* are met:&#xD;&#xA;* 1. Redistributions of source code must retain the above copyright&#xD;&#xA;* notice, this list of conditions and the following disclaimer.&#xD;&#xA;* 2. Redistributions in binary form must reproduce the above copyright&#xD;&#xA;* notice, this list of conditions and the following disclaimer in the&#xD;&#xA;* documentation and/or other materials provided with the distribution.&#xD;&#xA;* 3. All advertising materials mentioning features or use of this software&#xD;&#xA;* must display the following acknowledgement:&#xD;&#xA;* This product includes software developed by the Computer Systems&#xD;&#xA;* Engineering Group at Lawrence Berkeley Laboratory.&#xD;&#xA;* 4. Neither the name of the University nor of the Laboratory may be used&#xD;&#xA;* to endorse or promote products derived from this software without&#xD;&#xA;* specific prior written permission.&#xD;&#xA;*&#xD;&#xA;* THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS&#39;&#39; AND&#xD;&#xA;* ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE&#xD;&#xA;* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&#xD;&#xA;* ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE&#xD;&#xA;* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL&#xD;&#xA;* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS&#xD;&#xA;* OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#xD;&#xA;* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT&#xD;&#xA;* LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY&#xD;&#xA;* OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xD;&#xA;* SUCH DAMAGE.&#xD;&#xA;*/&#xD;&#xA;/* Ported from CMU/Monarch&#39;s code, nov&#39;98 -Padma.*/&#xD;&#xA; &#xD;&#xA;#ifndef __arp_h__&#xD;&#xA;#define __arp_h__&#xD;&#xA; &#xD;&#xA;#include &#34;scheduler.h&#34;&#xD;&#xA;#include &#34;delay.h&#34;&#xD;&#xA;#include &#34;lib/bsd-list.h&#34;&#xD;&#xA; &#xD;&#xA;#ifndef EADDRNOTAVAIL&#xD;&#xA;#define EADDRNOTAVAIL 125&#xD;&#xA;#endif /* !EADDRNOTAVAIL */&#xD;&#xA; &#xD;&#xA;class LinkDelay;&#xD;&#xA;class ARPEntry;&#xD;&#xA;class ARPTable;&#xD;&#xA;class LL;&#xD;&#xA;class Mac;&#xD;&#xA; &#xD;&#xA;LIST_HEAD(ARPTable_List, ARPTable);&#xD;&#xA;LIST_HEAD(ARPEntry_List, ARPEntry);&#xD;&#xA; &#xD;&#xA;/* ======================================================================&#xD;&#xA;Address Resolution (ARP) Header&#xD;&#xA;====================================================================== */&#xD;&#xA;#define ARPHRD_ETHER 1 /* ethernet hardware format */&#xD;&#xA; &#xD;&#xA;#define ARPOP_REQUEST 1 /* request to resolve address */&#xD;&#xA;#define ARPOP_REPLY 2 /* response to previous request */&#xD;&#xA;#define ARPOP_REVREQUEST 3 /* request protocol address */&#xD;&#xA;#define ARPOP_REVREPLY 4 /* response giving protocol address */&#xD;&#xA;#define ARPOP_INVREQUEST 8 /* request to identify peer */&#xD;&#xA;#define ARPOP_INVREPLY 9 /* response identifying peer */&#xD;&#xA; &#xD;&#xA;#define ARP_HDR_LEN 28&#xD;&#xA; &#xD;&#xA;struct hdr_arp {&#xD;&#xA;u_int16_t arp_hrd;&#xD;&#xA;u_int16_t arp_pro;&#xD;&#xA;u_int8_t arp_hln;&#xD;&#xA;u_int8_t arp_pln;&#xD;&#xA;u_int16_t arp_op;&#xD;&#xA;int arp_sha;&#xD;&#xA;u_int16_t pad1; // so offsets are correct&#xD;&#xA;nsaddr_t arp_spa;&#xD;&#xA;int arp_tha;&#xD;&#xA;u_int16_t pad2; // so offsets are correct&#xD;&#xA;nsaddr_t arp_tpa;&#xD;&#xA; &#xD;&#xA;// Header access methods&#xD;&#xA;static int offset_; // required by PacketHeaderManager&#xD;&#xA;inline static int&amp;amp; offset() { return offset_; }&#xD;&#xA;inline static hdr_arp* access(const Packet* p) {&#xD;&#xA;return (hdr_arp*) p-&amp;gt;access(offset_);&#xD;&#xA;}&#xD;&#xA;};&#xD;&#xA; &#xD;&#xA;class ARPEntry {&#xD;&#xA;friend class ARPTable;&#xD;&#xA;public:&#xD;&#xA;ARPEntry(ARPEntry_List* head, nsaddr_t dst) {&#xD;&#xA;up_ = macaddr_ = count_ = 0;&#xD;&#xA;ipaddr_ = dst;&#xD;&#xA;hold_ = 0;&#xD;&#xA;LIST_INSERT_HEAD(head, this, arp_link_);&#xD;&#xA;}&#xD;&#xA;inline ARPEntry* nextarp() { return arp_link_.le_next; }&#xD;&#xA; &#xD;&#xA;private:&#xD;&#xA;LIST_ENTRY(ARPEntry) arp_link_;&#xD;&#xA; &#xD;&#xA;int up_;&#xD;&#xA;nsaddr_t ipaddr_;&#xD;&#xA;int macaddr_;&#xD;&#xA;Packet *hold_;&#xD;&#xA;int count_;&#xD;&#xA;#define ARP_MAX_REQUEST_COUNT 3&#xD;&#xA;};&#xD;&#xA; &#xD;&#xA;class ARPTable : public LinkDelay {&#xD;&#xA;public:&#xD;&#xA;ARPTable(const char *tclnode, const char *tclmac);&#xD;&#xA; &#xD;&#xA;int command(int argc, const char*const* argv);&#xD;&#xA;int arpresolve(nsaddr_t dst, Packet *p, LL *ll);&#xD;&#xA;void arpinput(Packet *p, LL *ll);&#xD;&#xA;ARPEntry* arplookup(nsaddr_t dst);&#xD;&#xA;void arprequest(nsaddr_t src, nsaddr_t dst, LL *ll);&#xD;&#xA; &#xD;&#xA;void Terminate(void);&#xD;&#xA; &#xD;&#xA;private:&#xD;&#xA;inline int initialized() { return node_ &amp;amp;&amp;amp; mac_; }&#xD;&#xA; &#xD;&#xA;ARPEntry_List arphead_;&#xD;&#xA;MobileNode *node_;&#xD;&#xA;Mac *mac_;&#xD;&#xA; &#xD;&#xA;/*&#xD;&#xA;* Used to purge all of the ll-&amp;gt;hold packets at the end of the&#xD;&#xA;* simulation.&#xD;&#xA;*/&#xD;&#xA;public:&#xD;&#xA;LIST_ENTRY(ARPTable) link_;&#xD;&#xA;static ARPTable_List athead_;&#xD;&#xA;};&#xD;&#xA; &#xD;&#xA;#endif /* __arp_h__ */&#xD;&#xA;&lt;/pre&gt;&lt;/p&gt;&#xD;&#xA;</description>
    </item>
    <item>
      <title>你的第一篇博客</title>
      <link>http://zengluyang.github.io/2013/new-born.html</link>
      <pubDate>2013-02-08 12:00:00 +0800</pubDate>
      <description>&lt;h1&gt;感谢你使用Gor编写博客&lt;/h1&gt;&#xA;&#xA;&lt;h2&gt;本文位于 posts/first-blog.md , 你可以任意删掉,修改这个文件&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;文件开头是当前文章的元数据&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;date为自动生成, 当然,你可以修改,这是你的自由&lt;/li&gt;&#xA;&lt;li&gt;permalink 可以是固定地址,也可以由gor为你自动生成&lt;/li&gt;&#xA;&lt;li&gt;categories 就是分类, 可以多个&lt;/li&gt;&#xA;&lt;li&gt;tags 同理,多个标签也是很常见的&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;请确保文件使用UTF8 without BOM编码&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;你可以通过执行下面的语句来新建一篇博客:&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gor post 文章标题&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;编译你的博客,并预览之&lt;/h2&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gor compile #编译&#xA;gor http&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;然后打开你的浏览器,访问 &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt; 来预览&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;你将使用Markdown来编写博客&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://wowubuntu.com/markdown/&#34;&gt;Markdown 语法中文版&lt;/a&gt; 能让你快速入门其语法&lt;/p&gt;&#xA;&#xA;&lt;p&gt;相信&lt;a href=&#34;http://markdownpad.com&#34;&gt;MarkdownPad&lt;/a&gt;或&lt;a href=&#34;http://code.google.com/p/liteide/&#34;&gt;liteide&lt;/a&gt;会是你的编写博客的好帮手&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;如果你打算部署到github的pages上&lt;/h2&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;申请github帐户&lt;/li&gt;&#xA;&lt;li&gt;新建一个库 username.github.com 即你的用户名命名的地址&lt;/li&gt;&#xA;&lt;li&gt;将compiled目录,作为根路径,提交上去github.com上&lt;/li&gt;&#xA;&lt;li&gt;稍等几分钟, 你即可通过 &lt;a href=&#34;http://username.github.com&#34;&gt;http://username.github.com&lt;/a&gt; 访问到&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h2&gt;附上git教程 &lt;a href=&#34;http://gitbook.liuhui998.com/&#34;&gt;GitBook中文版&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;一般来说,你只需要几个简单的git命令就足以应付大部分需求(仅示例)&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git clone git://github.com/wendal/wendal.net.git&#xA;git add -A&#xA;git commit -m &amp;quot;...&amp;quot;&#xA;git pull&#xA;git push&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;用gor编写博客将会是一件很开心的事,如果有任何意见或建议,欢迎到 &lt;a href=&#34;http://github.com/wendal/gor&#34;&gt;gor的官网&lt;/a&gt; 提交issue&lt;/h2&gt;&#xA;&#xA;&lt;h1&gt;祝你使用愉快&lt;/h1&gt;&#xA;</description>
    </item>
  </channel>
</rss>